use crate::db::{DataBase, DataBaseTable};
pub fn print_tables(db: &DataBase) {
    println!("Database name: {}", db.get_name());
    let tables = db.get_tables();
    println!("{} has {} tables.", db.get_name(), tables.len());
    if tables.is_empty() {
        println!("This Database does not contain any tables...\n\n");
    } else {
        for i in 0..tables.len() {}
    }
}

pub fn print_table(table: DataBaseTable) {
    let col_width = 14;
    let columns = table.get_columns();
    let total_width = ((col_width + 2) * columns.len()) as i32;
    print_ln(total_width, "_".to_string());
    let mut index = 1;
    print!("    | ");
    for col in columns {
        let mut col_name = col.get_name().clone();
        col_name.push_str(": ");
        col_name.push_str(col.get_type().get_type_as_string().as_str());
        for i in col_name.len()..=col_width {
            col_name.push_str(" ");
        }
        if index == columns.len() {
            println!("{}|", col_name);
        } else {
            print!("{}| ", col_name);
        }
        index += 1;
    }
    print_ln(total_width, " ̄".to_string());
    let rows = table.get_rows();
    if rows.is_empty() {
        println!("     This table is empty.");
    } else {
        for row in rows {
            print!("    | ");
            let mut index = 1;
            let entries = row.get_entries();
            for entry in entries {
                let mut entry_name = entry.get_data().to_string();
                for i in entry_name.len()..=col_width {
                    entry_name.push_str(" ");
                }
                if index == entries.len() {
                    println!("{}| ", entry_name);
                } else {
                    print!("{}| ", entry_name);
                }
                index += 1;
            }
        }

        print_ln(total_width, " ̄".to_string());
        println!("\n");
    }
}

fn print_ln(total_width: i32, char: String) {
    print!("     {}", char);
    for i in 0..total_width {
        if i != total_width - 1 {
            print!("{}", char);
        } else {
            println!("{}", char);
        }
    }
}
